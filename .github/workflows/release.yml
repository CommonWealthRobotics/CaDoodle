# test
name: Publish package to GitHub Packages
on: 
   push:
       tags:       
         - '*'

jobs:

  linux-arm:
    runs-on: ubuntu-24.04-arm
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//} 
    - name: Build
      env:
         VERSION_SEMVER: ${{steps.get_version.outputs.VERSION }}
      run: bash package-linux_arm64.sh
    - name: Upload  result for job Linux
      uses: actions/upload-artifact@v4
      with:
          name: linux-arm-lib
          path: release/*

  linux:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//} 
    - name: Build
      env:
         VERSION_SEMVER: ${{steps.get_version.outputs.VERSION }}
      run: bash package-linux_x64.sh
    - name: Upload  result for job Linux
      uses: actions/upload-artifact@v4
      with:
          name: linux-lib
          path: release/*

  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: microsoft/setup-msbuild@v1.1
    - uses: milliewalky/setup-7-zip@v1
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//} 
    - name: Build
      env:
         VERSION_SEMVER: ${{steps.get_version.outputs.VERSION }}
      run: bash package-windows_x86_64.sh
    - name: Upload  result for job Windows
      uses: actions/upload-artifact@v4
      with:
          name: win-lib
          path: release/*
  macos-arm:
    runs-on: macos-14
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//} 
    - name: Build
      env:
         VERSION_SEMVER: ${{steps.get_version.outputs.VERSION }}
      run: bash package-macos.sh
    - name: Upload  result for job Mac
      uses: actions/upload-artifact@v4
      with:
          name: mac-lib-arm
          path: release/*
  macos:
    runs-on: macos-13
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//} 
    - name: Build
      env:
         VERSION_SEMVER: ${{steps.get_version.outputs.VERSION }}
      run: bash package-macos.sh
    - name: Upload  result for job Mac
      uses: actions/upload-artifact@v4
      with:
          name: mac-lib-x86
          path: release/*
  publish:
    runs-on: ubuntu-latest 
    needs: [macos,windows,linux,macos-arm,  linux-arm]
    permissions: 
      contents: write
      packages: write 
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
        run: |
          echo $VERSION_SEMVER
          echo ${{ steps.vars.outputs.tag }}
      - name: Download  result for job Windows
        uses: actions/download-artifact@v4
        with:
          name: win-lib 
          path: .
      - name: Download  result for job Linux
        uses: actions/download-artifact@v4
        with:
          name: linux-lib 
          path: .
      - name: Download  result for job Mac-arm
        uses: actions/download-artifact@v4
        with:
          name: mac-lib-arm
          path: .
      - name: Download  result for job Mac-x86
        uses: actions/download-artifact@v4
        with:
          name: mac-lib-x86
          path: .
      - name: Download  result for job Linux ARM
        uses: actions/download-artifact@v4
        with:
          name: linux-arm-lib
          path: .
      - name: Check downloads
        run: |
          echo "Downloads:"
          ls -als
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            CaDoodle-Linux-arm64.AppImage
            CaDoodle-Linux-arm64.deb
            CaDoodle-Linux-x86_64.AppImage
            CaDoodle-Linux-x86_64.deb
            CaDoodle-Windows-x86_64.exe
            CaDoodle-Windows-x86_64.zip
            CaDoodle-MacOS-x86_64.dmg
            CaDoodle-MacOS-arm64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

